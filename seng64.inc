;/*
; *	sengine
; *	A threaded program for solving directmate chess problems.
; *
; *	(c) 2020-2021, Brian Stephenson
; * brian@bstephen.me.uk
; *
; */

					DEFAULT		REL
TRUE				EQU			1
FALSE				EQU			0
THR_ALL				EQU			0
THR_NONE			EQU			1
THR_SHORTEST		EQU			2

%macro				SAVE 1-*
					%rep	%0
					push	%1
					%rotate 1
					%endrep
%endmacro

%macro				RESTORE 1-*
					%rep	%0
					%rotate -1
					pop	%1
					%endrep
%endmacro

%macro				BDS_ABS	2
					mov	%2, %1
					add	%2, %2
					sbb	%2, %2
					xor	%1, %2
					sub	%1, %2
%endmacro

%macro		      SET_SET_MASKS 0
;	SET_SET_MASKS
;
;	This macro generates 64 64-bit (dq) values starting at 1, with each
;	subsequent value being multiplied by 2.
;
                  %assign tb 1
                  %rep 64
                  dq	tb
                  %assign tb tb << 1
                  %endrep
%endmacro

%macro		      SET_CLEAR_MASKS 0
;	SET_CLEAR_MASKS
;
;	This macro generates 64 64-bit (dq) values, each of which is the logical
;	'not' of the equivalent value generated by SET_SET_MASKS.
;
                  %assign tb 1
                  %rep 64
                  %assign bt ~tb
                  dq	bt
                  %assign tb tb << 1
                  %endrep
%endmacro 
